name: Build Maurosoft.Blazor.Tailwind.Core Library
on:
  push:
    branches: [main]
    paths:  [ 'src/Maurosoft.Blazor.Tailwind.Core/**' ]
  pull_request:
    branches: [main]
    paths:  [ 'src/Maurosoft.Blazor.Tailwind.Core/**' ]
  workflow_dispatch:
    inputs:
      configuration:
        type: choice
        description: The build configuration to use in the deploy stage.
        required: true
        default: Release
        options:
          - Debug
          - Release

env:
  TIMEZONE: 'Europe/Rome'
  CONFIGURATION: 'Release'
  PROJECT_PATH: ./src/Maurosoft.Blazor.Tailwind.Core
  PROJECT_NAME:  Maurosoft.Blazor.Tailwind.Core.csproj
  PACKAGE_NAME: Maurosoft.Blazor.Tailwind.Core
  BUILD_ARTIFACT: Maurosoft.Blazor.Tailwind.Core

jobs:
  build:
    name: üõ†Ô∏è Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:
      - name: Checkout
        uses: maurosoft1973/git-checkout@v1

      - name: Set Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install npm dependencies
        run: cd ${{ env.PROJECT_PATH }} && npm install

      - name: Run gulp task
        run: cd ${{ env.PROJECT_PATH }} && gulp build

      - name: Install .NET
        uses: maurosoft1973/gha-dotnet-install@v1

      - name: Nerdbank.GitVersioning 
        uses: dotnet/nbgv@v0.4
        id: nbgv
        with:
          path: ${{ env.PROJECT_PATH }}

      - name: Restore Dependencies
        uses: maurosoft1973/gha-dotnet-restore@v1

      - name: Build for ${{ env.CONFIGURATION }}
        uses: maurosoft1973/gha-dotnet-build@v1
        with:
          projects: ${{ env.PROJECT_PATH }}/${{ env.PROJECT_NAME }}
          configuration: ${{ env.CONFIGURATION }}
          framework: ${{ env.NET_VERSION }}
          uploadBuildArtifactName:  ${{ env.BUILD_ARTIFACT }}

  pack:
    name: üì¶ Pack
    runs-on: ubuntu-latest
    needs: [build]
    steps:     
      - name: Pack for ${{ env.CONFIGURATION }}
        uses: maurosoft1973/gha-dotnet-pack@v1
        with:
          downloadArtifactName: ${{ env.BUILD_ARTIFACT }}
          level: 'normal'
          packageName: ${{ env.PACKAGE_NAME }}
          packageVersion: ${{ needs.build.outputs.version }}
          projects: ${{ env.PROJECT_PATH }}/${{ env.PROJECT_NAME }}
          uploadPackedArtifact: true

  deploy:
    name: üöÄ Deploy Pack v.${{ needs.build.outputs.version }}
    runs-on: ubuntu-latest
    needs: [build,pack]
    environment: Production
    steps:
      - uses: maurosoft1973/gha-dotnet-nuget-push@v1
        with:
          source: 'https://api.nuget.org/v3/index.json'
          token: ${{ secrets.NUGET_API_KEY }}
          packageName: ${{ env.PACKAGE_NAME }}.${{ needs.build.outputs.version }}.nupkg
          configuration: ${{ inputs.configuration == '' && 'Release' || inputs.configuration }}
